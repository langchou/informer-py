name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送以 "v" 开头的 tag 时触发

jobs:
  # Job 1: 构建并推送 Docker 镜像
  docker_build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出仓库代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Step 4: 使用 Docker Buildx 构建和推送多平台镜像
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: jontyding/informer-py
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

  # Job 2: 编译并发布二进制文件
  binary_release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出仓库代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Step 4: 编译 Linux 二进制文件
      - name: Build binary for Linux
        run: |
          mkdir -p build
          pyinstaller --onefile --name informer-py --distpath ./build --workpath ./build/temp \
            --exclude-module playwright \
            informer/main.py

      # Step 5: 创建压缩包
      - name: Create ZIP archive
        run: |
          cd build
          zip -r informer-py-linux.zip informer-py
          cd ..

      # Step 6: 创建 GitHub Release 并上传二进制文件
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/informer-py
            build/informer-py-linux.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}